# Generated by Django 5.0.6 on 2024-05-19 12:42

import QR_generator.model_validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID объекта')),
                ('created', models.DateTimeField(default=QR_generator.model_validators.get_current_time, editable=False, validators=[QR_generator.model_validators.check_earlier_than_current], verbose_name='Время создания объекта')),
                ('modified', models.DateTimeField(default=QR_generator.model_validators.get_current_time, editable=False, validators=[QR_generator.model_validators.check_earlier_than_current], verbose_name='Время изменения объекта')),
                ('category', models.CharField(max_length=255, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'категория QR кода',
                'verbose_name_plural': 'категории QR кодов',
                'db_table': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID объекта')),
                ('created', models.DateTimeField(default=QR_generator.model_validators.get_current_time, editable=False, validators=[QR_generator.model_validators.check_earlier_than_current], verbose_name='Время создания объекта')),
                ('modified', models.DateTimeField(default=QR_generator.model_validators.get_current_time, editable=False, validators=[QR_generator.model_validators.check_earlier_than_current], verbose_name='Время изменения объекта')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт пользователя')),
            ],
            options={
                'verbose_name': 'клиент',
                'verbose_name_plural': 'клиенты',
                'db_table': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='QRCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID объекта')),
                ('created', models.DateTimeField(default=QR_generator.model_validators.get_current_time, editable=False, validators=[QR_generator.model_validators.check_earlier_than_current], verbose_name='Время создания объекта')),
                ('modified', models.DateTimeField(default=QR_generator.model_validators.get_current_time, editable=False, validators=[QR_generator.model_validators.check_earlier_than_current], verbose_name='Время изменения объекта')),
                ('code_name', models.CharField(max_length=255, verbose_name='Название QR кода')),
                ('direction', models.URLField(verbose_name='URL адрес, куда ведёт QR код')),
                ('end_time', models.DateTimeField(blank=True, null=True, validators=[QR_generator.model_validators.check_later_than_current], verbose_name='Время окончания работы QR кода')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='QR_generator.category', verbose_name='Категория QR кода')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QR_generator.client', verbose_name='Создатель QR кода')),
            ],
            options={
                'verbose_name': 'QR код',
                'verbose_name_plural': 'QR коды',
                'db_table': 'QR_codes',
            },
        ),
        migrations.AddConstraint(
            model_name='qrcode',
            constraint=models.UniqueConstraint(fields=('code_name', 'owner'), name='unique_code_name_owner'),
        ),
    ]
